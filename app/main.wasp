app OpenSaaS {
  wasp: {
    version: "^0.16.0"
  },

  title: "CSV Manager",
  
  head: [
    "<meta charset='utf-8' />",
    "<meta name='description' content='A Notion-like CSV management tool' />",
    "<meta name='author' content='CSV Manager' />",
    "<meta name='keywords' content='csv, notion, data management, spreadsheet' />",
    
    "<meta property='og:type' content='website' />",
    "<meta property='og:title' content='CSV Manager' />",
    "<meta property='og:site_name' content='CSV Manager' />",
    "<meta property='og:url' content='https://your-csv-manager.com' />",
    "<meta property='og:description' content='A Notion-like CSV management tool' />",
    "<meta property='og:image' content='https://your-csv-manager.com/public-banner.webp' />",
    "<meta name='twitter:image' content='https://your-csv-manager.com/public-banner.webp' />",
    "<meta name='twitter:image:width' content='800' />",
    "<meta name='twitter:image:height' content='400' />",
    "<meta name='twitter:card' content='summary_large_image' />"
  ],

  // üîê Auth out of the box! https://wasp.sh/docs/auth/overview
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/",
  },

  db: {
    seeds: [
      import { seedMockUsers } from "@src/server/scripts/dbSeeds",
    ]
  },

  client: {
    rootComponent: import App from "@src/client/App",
  },

  emailSender: {
    provider: Dummy,
    defaultFrom: {
      name: "CSV Manager",
      email: "me@example.com"
    },
  },
}

//#region Auth Pages
route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/auth/LoginPage"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import { Signup } from "@src/auth/SignupPage"
}

route RequestPasswordResetRoute { path: "/request-password-reset", to: RequestPasswordResetPage }
page RequestPasswordResetPage {
  component: import { RequestPasswordResetPage } from "@src/auth/email-and-pass/RequestPasswordResetPage",
}

route PasswordResetRoute { path: "/password-reset", to: PasswordResetPage }
page PasswordResetPage {
  component: import { PasswordResetPage } from "@src/auth/email-and-pass/PasswordResetPage",
}

route EmailVerificationRoute { path: "/email-verification", to: EmailVerificationPage }
page EmailVerificationPage {
  component: import { EmailVerificationPage } from "@src/auth/email-and-pass/EmailVerificationPage",
}
//#endregion

//#region CSV Manager
route RootRoute { path: "/", to: DashboardPage }
route DashboardPageRoute  { path: "/dashboard", to: DashboardPage }
page DashboardPage {
  component: import  { Dashboard }  from "@src/csv-manager/dashboard/DashboardPage"
}

route CsvFilesRoute  { path: "/csv-files", to: CsvFilesPage }
page CsvFilesPage {
  component: import  { CsvFilesPage }  from "@src/csv-manager/csv-files/CsvFilesPage"
}

route CsvFilePreviewRoute { path: "/csv-files/:id", to: CsvFilePreviewPage }
page CsvFilePreviewPage {
  component: import { CsvFilePreviewPage } from "@src/csv-manager/csv-files/CsvFilePreviewPage"
}

route BatchTypesPageRoute  { path: "/batch-types", to: BatchTypesPage }
page BatchTypesPage {
  component: import  { BatchTypesPage }  from "@src/csv-manager/batch-types/BatchTypesPage"
}

action createBatchType {
  fn: import { createBatchType } from "@src/csv-manager/batch-types/actions",
  entities: [BatchType]
}

action deleteBatchType {
  fn: import { deleteBatchType } from "@src/csv-manager/batch-types/actions",
  entities: [BatchType]
}

action updateBatchType {
  fn: import { updateBatchType } from "@src/csv-manager/batch-types/actions",
  entities: [BatchType]
}

query getBatchTypes {
  fn: import { getBatchTypes } from "@src/csv-manager/batch-types/queries",
  entities: [BatchType]
}

query getCsvFiles {
  fn: import { getCsvFiles } from "@src/csv-manager/csv-files/queries",
  entities: [CsvFile]
}

query getCsvFile {
  fn: import { getCsvFile } from "@src/csv-manager/csv-files/queries",
  entities: [CsvFile, CsvRow]
}

action createCsvFile {
  fn: import { createCsvFile } from "@src/csv-manager/csv-files/actions",
  entities: [CsvFile, CsvRow]
}

action updateCsvFile {
  fn: import { updateCsvFile } from "@src/csv-manager/csv-files/actions",
  entities: [CsvFile, CsvRow]
}

action deleteCsvFile {
  fn: import { deleteCsvFile } from "@src/csv-manager/csv-files/actions.js",
  entities: [CsvFile, CsvRow]
}
//#endregion

//#region User
route AccountRoute { path: "/account", to: AccountPage }
page AccountPage {
  authRequired: true,
  component: import Account from "@src/user/AccountPage"
}

query getPaginatedUsers {
  fn: import { getPaginatedUsers } from "@src/user/operations",
  entities: [User]
}

action updateIsUserAdminById {
  fn: import { updateIsUserAdminById } from "@src/user/operations",
  entities: [User]
}
//#endregion

route NotFoundRoute { path: "*", to: NotFoundPage }
page NotFoundPage {
  component: import { NotFoundPage } from "@src/client/components/NotFoundPage"
}
